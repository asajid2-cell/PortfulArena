import { createAstro, createComponent, maybeRenderHead, renderComponent, addAttribute, renderTemplate, renderHead, renderSlot } from './astro/server.mjs';
import 'kleur/colors';
import 'html-escaper';
/* empty css                */
import { jsx } from 'react/jsx-runtime';
import { useEffect } from 'react';
import { useReducedMotion, useSpring, motion } from 'framer-motion';
import 'clsx';

function ScrollProgress() {
  const prefersReducedMotion = useReducedMotion();
  const progress = useSpring(0, {
    stiffness: 180,
    damping: 28,
    mass: 0.35
  });
  useEffect(() => {
    if (prefersReducedMotion) {
      progress.set(0);
      return;
    }
    const updateProgress = () => {
      const body = document.body;
      const documentElement = document.documentElement;
      const scrollTop = documentElement.scrollTop || body.scrollTop;
      const scrollHeight = documentElement.scrollHeight - documentElement.clientHeight;
      const next = scrollHeight > 0 ? scrollTop / scrollHeight : 0;
      progress.set(next);
    };
    updateProgress();
    window.addEventListener("scroll", updateProgress, { passive: true });
    window.addEventListener("resize", updateProgress);
    return () => {
      window.removeEventListener("scroll", updateProgress);
      window.removeEventListener("resize", updateProgress);
    };
  }, [prefersReducedMotion, progress]);
  if (prefersReducedMotion) {
    return null;
  }
  return /* @__PURE__ */ jsx("div", { className: "pointer-events-none absolute inset-x-0 bottom-0 h-0.5 overflow-hidden", children: /* @__PURE__ */ jsx(
    motion.div,
    {
      className: "h-full origin-left bg-gradient-to-r from-[color:rgba(124,58,237,0.7)] via-[color:rgba(124,58,237,0.3)] to-[color:rgba(34,211,238,0.55)] shadow-neon",
      style: { scaleX: progress }
    }
  ) });
}

const $$Astro$3 = createAstro("https://example.com");
const $$Header = createComponent(($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$3, $$props, $$slots);
  Astro2.self = $$Header;
  const navItems = [
    { href: "/", label: "Home" },
    { href: "/projects", label: "Projects" },
    { href: "/about", label: "About" },
    { href: "/contact", label: "Contact" }
  ];
  const pathname = Astro2.url.pathname.replace(/\/+$/, "") || "/";
  return renderTemplate`${maybeRenderHead()}<header class="sticky top-0 z-40 border-b border-[color:var(--line-1)] bg-[color:rgb(11,12,16,0.65)]/80 backdrop-blur-md"> <div class="relative"> <div class="mx-auto flex h-16 max-w-[1280px] items-center justify-between px-6 sm:px-12 lg:px-16"> <a href="/" class="flex items-center gap-3 text-lg font-semibold tracking-tight"> <span aria-hidden="true" class="grid h-9 w-9 place-items-center rounded-full bg-[color:var(--bg-2)] shadow-ambient ring-1 ring-[color:var(--line-1)]"> <span class="h-5 w-5 rounded-full border border-[color:var(--pri-500)] bg-[color:var(--pri-500)]/20"></span> </span> <span class="font-display text-base sm:text-lg">Portful Arena</span> </a> <nav aria-label="Primary" class="flex items-center gap-2"> ${navItems.map((item) => {
    const isActive = pathname === item.href;
    return renderTemplate`<a${addAttribute(item.href, "href")}${addAttribute(`rounded-full border border-transparent px-4 py-2 text-sm font-medium transition-colors duration-120 ease-settle focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-offset-[color:var(--bg-0)] ${isActive ? "bg-[color:var(--bg-2)] text-[color:var(--pri-300)] shadow-ambient" : "text-[color:var(--text-2)] hover:text-[color:var(--pri-400)]"}`, "class")}${addAttribute(isActive ? "page" : void 0, "aria-current")}> ${item.label} </a>`;
  })} </nav> </div> ${renderComponent($$result, "ScrollProgress", ScrollProgress, { "client:visible": true, "client:component-hydration": "visible", "client:component-path": "Z:/328/CMPUT328-A2/codexworks/301/portful/src/components/navigation/ScrollProgress.tsx", "client:component-export": "default" })} </div> </header>`;
}, "Z:/328/CMPUT328-A2/codexworks/301/portful/src/components/Header.astro", void 0);

const $$Astro$2 = createAstro("https://example.com");
const $$Footer = createComponent(($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$2, $$props, $$slots);
  Astro2.self = $$Footer;
  return renderTemplate`${maybeRenderHead()}<footer class="border-t border-[color:var(--line-1)] bg-[color:rgba(15,17,23,0.8)] backdrop-blur"> <div class="mx-auto flex max-w-[1280px] flex-col gap-6 px-6 py-10 sm:flex-row sm:items-center sm:justify-between sm:px-12 lg:px-16"> <div class="space-y-2 text-sm text-[color:var(--text-3)]"> <p>© ${(/* @__PURE__ */ new Date()).getFullYear()} Portful. All sparks reserved.</p> <p class="flex items-center gap-2"> <span class="inline-flex h-2.5 w-2.5 animate-pulse rounded-full bg-[color:var(--pri-500)] shadow-neon" aria-hidden="true"></span>
Built with Astro, Tailwind, MDX & R3F.
</p> </div> <div class="flex items-center gap-4 text-sm text-[color:var(--text-2)]"> <a href="https://github.com/" target="_blank" rel="noopener noreferrer" class="hover:text-[color:var(--pri-400)]">
GitHub
</a> <a href="https://www.linkedin.com/" target="_blank" rel="noopener noreferrer" class="hover:text-[color:var(--pri-400)]">
LinkedIn
</a> <a href="/resume.pdf" class="hover:text-[color:var(--pri-400)]">
Résumé
</a> </div> </div> </footer>`;
}, "Z:/328/CMPUT328-A2/codexworks/301/portful/src/components/Footer.astro", void 0);

const $$Astro$1 = createAstro("https://example.com");
const $$BaseLayout = createComponent(($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$1, $$props, $$slots);
  Astro2.self = $$BaseLayout;
  const {
    title = "Portful",
    description = "Physics-inspired portfolio",
    showArena = true
  } = Astro2.props;
  return renderTemplate`<html lang="en" class="theme-dark"> <head><meta charset="utf-8"><meta name="viewport" content="width=device-width, initial-scale=1"><title>${title}</title><meta name="description"${addAttribute(description, "content")}><link rel="preconnect" href="https://fonts.gstatic.com" crossorigin><link rel="preconnect" href="https://fonts.googleapis.com"><link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter:wght@300;500;700&family=JetBrains+Mono:wght@400;600&display=swap">${renderHead()}</head> <body class="bg-[var(--bg-0)] text-[color:var(--text-1)] font-sans antialiased"> <a href="#main" class="sr-only focus:not-sr-only focus:absolute focus:top-4 focus:left-6 focus:rounded-md focus:bg-[color:var(--bg-2)] focus:px-4 focus:py-2 focus:text-[color:var(--text-1)] focus:shadow-ambient">
Skip to main content
</a> ${renderComponent($$result, "Header", $$Header, {})} <main id="main" class="min-h-[calc(100vh-10rem)]"> ${renderSlot($$result, $$slots["default"])} </main> ${renderComponent($$result, "Footer", $$Footer, {})} </body></html>`;
}, "Z:/328/CMPUT328-A2/codexworks/301/portful/src/layouts/BaseLayout.astro", void 0);

const $$Astro = createAstro("https://example.com");
const $$SectionHeader = createComponent(($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
  Astro2.self = $$SectionHeader;
  const { eyebrow, title, description } = Astro2.props;
  return renderTemplate`${maybeRenderHead()}<div class="space-y-5"> ${eyebrow && renderTemplate`<p class="text-xs uppercase tracking-[0.35em] text-[color:var(--sec-500)]"> ${eyebrow} </p>`} <div> <h2 class="font-display text-4xl font-semibold tracking-tight text-[color:var(--text-1)] sm:text-[2.625rem]"> ${title} </h2> <div class="section-header__arc mt-4 h-[2px] w-24 rounded-full bg-[color:var(--pri-500)] shadow-neon"></div> </div> ${description && renderTemplate`<p class="max-w-xl text-sm text-[color:var(--text-2)]">${description}</p>`} </div>`;
}, "Z:/328/CMPUT328-A2/codexworks/301/portful/src/components/SectionHeader.astro", void 0);

export { $$BaseLayout, $$SectionHeader };
