[["Map",1,2,9,10],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.14.5","content-config-digest","f18fe246a47c9011","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"https://example.com\",\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[],\"responsiveStyles\":false},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":{\"type\":\"shiki\",\"excludeLangs\":[\"math\"]},\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[],\"rehypePlugins\":[],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true,\"allowedDomains\":[]},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"headingIdCompat\":false,\"preserveScriptOrder\":false,\"liveContentCollections\":false,\"csp\":false,\"staticImportMetaEnv\":false,\"chromeDevtoolsWorkspace\":false,\"failOnPrerenderConflict\":false},\"legacy\":{\"collections\":false}}","projects",["Map",11,12,46,47,80,81],"kinetic-dashboard",{"id":11,"data":13,"body":42,"filePath":43,"digest":44,"legacyId":45,"deferredRender":39},{"title":14,"summary":15,"problem":16,"insight":17,"approach":18,"outcome":19,"role":20,"category":21,"stack":22,"metrics":28,"links":35,"featured":39,"order":40,"publishedAt":41},"Kinetic Ops Dashboard","Real-time monitoring suite for an industrial robotics team with inertial navigation between bays.","Operators struggled to triage incidents quickly because the legacy UI was static and slow to surface context.","By mapping gestures to velocity and aligning visuals with the physical system, we could reduce cognitive load for technicians.","Astro for content, Next.js embedded for authenticated views, and a shared Tailwind token set so product and marketing shipped the same design language.","Incident acknowledgment time dropped by 28%, and operators requested that we roll the new system out across three additional plants.","Product engineer and design partner","Product",[23,24,25,26,27],"Astro","Next.js","tRPC","Tailwind CSS","Zustand",[29,32],{"label":30,"value":31},"MTTA","28% faster",{"label":33,"value":34},"Operator satisfaction","4.6 / 5",[36],{"label":37,"href":38},"Case study","https://example.com/kinetic-dashboard",true,2,"2023-11-04","## Systems thinking\n\nThe team manages dozens of tops (robots) across multiple bays. We aligned the UX with the mental model by making each bay a card with real-time telemetry, spin-down states, and escalation shortcuts.\n\n## Contributions\n\n- Architected the telemetry pipeline with WebSockets and graceful degradation to SSE\n- Co-designed the interaction model so velocity-based gestures felt intuitive with gloves on\n- Created MDX powered runbooks so ops could document clashes and resolutions inline\n\n## Result\n\nDeployment shipped with zero downtime, and the same codebase now powers digital signage and the executive overview mode.","src/content/projects/kinetic-dashboard.mdx","e5e9cb08474f2418","kinetic-dashboard.mdx","nebula-arena",{"id":46,"data":48,"body":76,"filePath":77,"digest":78,"legacyId":79,"deferredRender":39},{"title":49,"summary":50,"problem":51,"insight":52,"approach":53,"outcome":54,"role":55,"category":56,"stack":57,"metrics":60,"links":67,"featured":39,"order":74,"publishedAt":75},"Nebula Arena","Immersive launch experience for a physics puzzle game, blending R3F motion with responsive storytelling.","The studio needed a performant teaser site that matched the kinetic feel of their gameplay without relying on heavy video files.","We could simulate the clash of spinning tops with lightweight procedural shaders and spring-based motion, keeping the bundle lean.","Astro for static output, React islands for the arena canvas, and a Tailwind-powered design system that mirrored the in-game arena surfaces.","Bounce rate dropped by 34%, and the launch waitlist filled in 72 hours thanks to the interactive walkthrough.","Lead engineer and motion designer","Interactive",[23,58,26,59],"React Three Fiber","Framer Motion",[61,64],{"label":62,"value":63},"Visitors","38k in 10 days",{"label":65,"value":66},"Conversion","12.4% waitlist opt-in",[68,71],{"label":69,"href":70},"Design teardown","https://example.com/nebula-teardown",{"label":72,"href":73},"Repo","https://github.com/example/nebula-arena",1,"2024-08-12","## Overview\n\nPlayers land in a launch bay where the arena comes alive: orbits trace neon rings, tops clash with subtle sparks, and the story unfolds as you scroll or flick through bays.\n\n## What I delivered\n\n- Built a physics-inspired hero experience with R3F and custom shader materials\n- Authored modular MDX content for the campaign timeline\n- Tuned performance to keep the initial payload under 140 KB gzipped\n\n## Behind the scenes\n\nI prototyped the arena interactions with Framer Motion velocity tracking, then ported the math into React Three Fiber for a consistent motion language between DOM and WebGL layers.","src/content/projects/nebula-arena.mdx","15199a956dfa8f61","nebula-arena.mdx","labyrinth-ai",{"id":80,"data":82,"body":108,"filePath":109,"digest":110,"legacyId":111,"deferredRender":39},{"title":83,"summary":84,"problem":85,"insight":86,"approach":87,"outcome":88,"role":89,"category":90,"stack":91,"metrics":94,"links":101,"featured":105,"order":106,"publishedAt":107},"Labyrinth AI Trainer","Interactive playground that teaches teams how to prompt and evaluate AI agents using arena metaphors.","New adopters needed a playful way to understand constraints, failure modes, and evaluation strategies without reading dense docs.","Gamifying the learning flow with spinning discs and clash scenarios made experimentation less intimidating.","Astro + MDX for the curriculum, with React islands handling the AI prompt simulations and physics-driven feedback.","Workshops cut onboarding time by half, and 300+ participants shared replays within the first month.","Experience engineer","Learning",[23,92,93,26,59],"OpenAI API","Supabase",[95,98],{"label":96,"value":97},"Participants","310 in month one",{"label":99,"value":100},"Completion rate","92%",[102],{"label":103,"href":104},"Workshop kit","https://example.com/labyrinth-kit",false,3,"2024-03-21","## Why it works\n\nParticipants launch tops that represent agent strategies. They collide with scenario discs, sparking visual feedback that explains trade-offs and risk levels.\n\n## My role\n\n- Built the interactive clash visualizer with velocity decay and neon bloom states\n- Integrated workshop scoring so teams could compare their launches\n- Automated content publishing via MDX collections in Astro\n\n## Looking ahead\n\nWe are shipping a self-serve portal with save states and exportable recaps next.","src/content/projects/labyrinth-ai.mdx","b65ae153d302b074","labyrinth-ai.mdx"]